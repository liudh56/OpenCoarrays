name: Windows CI

on: [push, pull_request]

jobs:
  Build:
    runs-on: windows-latest
    strategy:
      fail-fast: true
    defaults:
      run:
        shell: msys2 {0}

    env:
      FC: gfortran
      CC: gcc

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install Dependencies
      uses: msys2/setup-msys2@v2
      with:
        update: true
        path-type: inherit
        install: >-
          mingw-w64-x86_64-gcc-fortran mingw-w64-x86_64-gcc

    - name: setup-mpi
      id: setup-mpi
      uses: mpi4py/setup-mpi@v1
      with:
        mpi: intelmpi

    - name: MPI info
      run: |
        echo "${{ steps.setup-mpi.outputs.mpi }}"
        set -o verbose
        # mpiexec -help
        type mpiexec
        ls "${I_MPI_ROOT}/bin"
        ls "${I_MPI_ROOT}"
        ls "${I_MPI_ROOT}/lib"
        ls "${I_MPI_ROOT}/env"
        # cat "${I_MPI_ROOT}/bin/mpifc.bat"
        # mpifc.bat -show
        # mpicc.bat -show
        mpifc.bat -version || echo "ifort not installed"
        mpicc.bat -version || echo "icc not installed"
        set +o verbose
        # echo The following environment variables are used:
        # echo    CMPLR_ROOT      Intel^(R^) Compiler installation directory path
        # echo    I_MPI_ROOT      Intel^(R^) MPI Library installation directory path
        # echo    I_MPI_{FC,F77,F90} or MPICH_{FC,F77,F90}
        # echo                    the path/name of the underlying compiler to be used.
        # echo    I_MPI_{FC,F77,F90}_PROFILE or MPI{FC,F77,F90}_PROFILE
        # echo                    name of profile file ^(without extension^)
        # echo    I_MPI_COMPILER_CONFIG_DIR
        # echo                    folder which contains configuration files *.conf
        # echo    VT_ROOT         Intel^(R^) Trace Collector installation directory path

    - name: Build and Test
      run: |
        mkdir build
        cmake -Wdev -G "Unix Makefiles" -S . -B build -DCMAKE_INSTALL_PREFIX="${HOME}/apps/OpenCoarrays" -DCMAKE_BUILD_TYPE:STRING="Debug"
        cmake --build build -j
        cmake --build build -t install -j || echo "installation failed"
        ctest --test-dir build --output-on-failure --schedule-random --repeat-until-fail 1 --timeout 200
        echo "${HOME}/apps/OpenCoarrays/bin" >> $GITHUB_PATH
        export PATH="${HOME}/apps/OpenCoarrays/bin:${PATH}"
        which caf || true
        which cafrun || true
        cafrun --show || true
        caf --show || true
        cafrun --version || true
        caf --version || true
        cd build
        make uninstall
